server {
    listen      80;
    listen      [::]:80;
    server_name {{ server_name }};

    return 301  https://{{ server_name }}$request_uri;
}

server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         {{ server_name }};
    ssl_certificate     {{ https_chain }};
    ssl_certificate_key {{ https_key }};
    ssl_dhparam         {{ https_dhparams }};

    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # only use modern, secure protocols and cipher suites
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (2 years)
    add_header Strict-Transport-Security "max-age=63072000" always;

    charset             utf-8;

    if ($host !~* ^{{ server_name }}$ ) {
        return 444;
    }

    gzip on;
    gzip_types application/javascript image/svg+xml;
    gzip_vary on;

    location / {
        root {{ www_root }};
        index index.html;
    }

    location /index.html {
        root {{ www_root }};

        # HSTS (2 years)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
}
