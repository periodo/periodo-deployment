---
- name: Include os-specific vars
  include_vars: "vars/{{ ansible_os_family }}.yml"

- name: Install system packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ system_packages }}"

- name: Create directory for app
  file:
    path: "{{ install_root }}"
    state: directory
    mode: u=rwx,g=rx,o=rx,g+s

- name: Create directory for WWW files
  file:
    path: "{{ www_root }}"
    state: directory
    owner: www-data
    mode: u=rwx,g=rx,o=rx,g+s

- name: Clone/pull project repo
  git:
    repo: "{{ project_repo }}"
    dest: "{{ install_root }}"
  notify:
  - Restart uwsgi

- name: Install python packages
  pip:
    requirements: "{{ install_root }}/requirements.txt"
    virtualenv: "{{ install_root }}/venv"
    virtualenv_command: "{{ python3_executable }} -m venv"
  notify:
  - Restart uwsgi

- name: Copy secrets file
  template:
    src: files/secrets.py
    dest: "{{ install_root }}/periodo/secrets.py"

- name: Upload PeriodO export file to be imported
  copy:
    src: "{{ import_file }}"
    dest: "{{ install_root }}/export.sql.gz"
  when: import_file is defined

- name: Remove old export file
  file:
    state: absent
    path: "{{ install_root }}/export.sql.gz"
  when: import_url is defined

- name: Import PeriodO export file
  make:
    chdir: "{{ install_root }}"
    target: import
    params:
      IMPORT_URL: "{{ import_url | default('') }}"
      DB: "{{ db_path }}"
  when: (import_file is defined) or (import_url is defined)

- name: Create vocabulary file and update DB schema
  make:
    chdir: "{{ install_root }}"
    target: all
    params:
      DB: "{{ db_path }}"

- name: Make DB file writable by web server
  file:
    path: "{{ db_path }}"
    state: file
    owner: www-data
    mode: u=rwx,g=rx,o=rx

- name: Upload initial data to be loaded
  copy:
    src: "{{ initial_data }}"
    dest: "{{ install_root }}/initial-data.json"
  when: initial_data is defined

- name: Load initial data
  make:
    chdir: "{{ install_root }}"
    target: load_data
    params:
      DATA: "{{ install_root }}/initial-data.json"
  when: initial_data is defined

- name: Fetch latest client
  make:
    chdir: "{{ install_root }}"
    target: fetch_latest_client
  notify:
  - Restart uwsgi

- name: Remove old static files from WWW root
  file:
    path: "{{ www_root }}/static"
    state: absent

- name: Move new static files to WWW root
  command: mv "{{ install_root }}/periodo/static" "{{ www_root }}"
  args:
    removes: "{{ install_root }}/periodo/static"

- name: Copy uwsgi config
  template:
    src: templates/uwsgi.ini.j2
    dest: "{{ uwsgi_conf_dir }}{{ server_name }}.ini"
  notify:
  - Restart uwsgi

- name: Purge nginx cache
  file:
    state: absent
    path: "{{ cache_path }}"
  notify:
  - Restart nginx

- name: Copy nginx config
  template:
    src: templates/nginx.conf.j2
    dest: "{{ nginx_conf_dir }}{{ server_name }}.conf"
  notify:
  - Restart nginx

- name: Ensure uwsgi is running
  systemd:
    name: uwsgi
    enabled: yes
    state: started

- name: Ensure nginx is running
  systemd:
    name: nginx
    enabled: yes
    state: started
