# the upstream component nginx needs to connect to
upstream {{ server_name_no_dots }}_app {
    server unix:///var/run/uwsgi/{{ server_name }}.socket;
}

# caching configuration
uwsgi_cache_path
    # path to cache dir
    {{ cache_path }}
    # 2 directory levels, 1st is 1 char, 2nd is 2 chars
    levels=1:2
    # put temporary files in the cache dir
    use_temp_path=off
    # name and size of the shared memory zone where keys are stored
    keys_zone={{ server_name_no_dots }}_cache:10m
    # time after which unrequested files are purged
    inactive=1y
    # maximum cache size before least recently requested files are purged
    max_size=10g;

server {
    listen      80;
    server_name {{ server_name }};

    return 301  https://{{ server_name }}$request_uri;
}

server {
    listen              443 ssl;
    server_name         {{ server_name }};
    ssl_certificate     {{ https_chain }};
    ssl_certificate_key {{ https_key }};
    ssl_dhparam         {{ https_dhparams }};

    # only use modern, secure cipher suites
    # https://weakdh.org/sysadmin.html
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    charset             utf-8;

    # If the request body is larger than 8K, it is written to a temporary file
    client_max_body_size 75M;
    client_body_temp_path "{{ www_root }}/client_temp" 1 2;

    if ($host !~* ^{{ server_name }}$ ) {
        return 444;
    }

    gzip on;
    gzip_types	text/turtle application/javascript application/json application/ld+json text/plain;
    gzip_vary on;

    location = / {
        index index.html;
    }

    location = /index.html {
        root {{ www_root }}/static/html;
    }

    location = /favicon.ico {
        root {{ www_root }}/static/html;
    }

    location /images/ {
        root {{ www_root }}/static/html;
    }

    location = /v.ttl {
        alias {{ www_root }}/static/vocab.ttl;
    }

    location = /v.ttl.html {
        alias {{ www_root }}/static/vocab.html;
    }

    location ~ /periodo-client(.*).js {
        alias {{ www_root }}/static/html/periodo-client$1.js;
    }

    location / {
        uwsgi_cache {{ server_name_no_dots }}_cache;
        uwsgi_cache_key $request_uri;
        uwsgi_cache_methods GET HEAD;
        uwsgi_cache_revalidate on;

        add_header X-Cache-Status $upstream_cache_status;

        uwsgi_pass  {{ server_name_no_dots }}_app;
        include  /etc/nginx/uwsgi_params;
    }
}
