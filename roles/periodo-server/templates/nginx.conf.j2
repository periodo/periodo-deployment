# the upstream component nginx needs to connect to
upstream {{ server_name_no_dots }}_app {
    server unix:///var/run/uwsgi/{{ server_name }}.socket;
}

map $upstream_status $no_cache {
    500 1;
    503 1;
    default 0;
}

# caching configuration
uwsgi_cache_path
    # path to cache dir
    {{ cache_path }}
    # 2 directory levels, 1st is 1 char, 2nd is 2 chars
    levels=1:2
    # put temporary files in the cache dir
    use_temp_path=off
    # name and size of the shared memory zone where keys are stored
    keys_zone={{ server_name_no_dots }}_cache:10m
    # time after which unrequested files are purged
    inactive=1y
    # maximum cache size before least recently requested files are purged
    max_size=10g;

server {
    listen      80;
    listen      [::]:80;
    server_name {{ server_name }};

    return 301  https://{{ server_name }}$request_uri;
}

server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         {{ server_name }};
    ssl_certificate     {{ https_chain }};
    ssl_certificate_key {{ https_key }};
    ssl_dhparam         {{ https_dhparams }};

    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # only use modern, secure protocols and cipher suites
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (2 years)
    add_header Strict-Transport-Security "max-age=63072000" always;

    charset             utf-8;

    # If the request body is larger than 8K, it is written to a temporary file
    client_max_body_size 75M;
    client_body_temp_path "{{ www_root }}/client_temp" 1 2;

    if ($host !~* ^{{ server_name }}$ ) {
        return 444;
    }

    gzip on;
    gzip_types text/turtle text/csv application/n-triples application/json application/ld+json text/plain;
    gzip_vary on;

    types {
        text/turtle ttl;
        text/html html;
        text/css css;
    }

    location = /d.ttl {
        return 301 /dataset.ttl;
    }
    location = /d.csv {
        return 301 /dataset.csv;
    }

    location = /v.ttl {
        alias {{ www_root }}/vocab.ttl;
    }
    location = /vocabulary.ttl {
        alias {{ www_root }}/vocab.ttl;
    }

    location = /v.ttl.html {
        alias {{ www_root }}/vocab.html;
    }
    location = /vocabulary.ttl.html {
        alias {{ www_root }}/vocab.html;
    }

    location = /highlight-style.css {
        alias {{ www_root }}/highlight-style.css;
    }

    location /client-packages {
        alias {{ www_root }}/client_packages;
        autoindex on;
    }

    location / {
        uwsgi_cache {{ server_name_no_dots }}_cache;
        uwsgi_cache_key $request_uri;
        uwsgi_cache_methods GET HEAD;
        uwsgi_cache_revalidate on;
        uwsgi_no_cache $no_cache;

        add_header X-Cache-Status $upstream_cache_status;
        add_header X-PeriodO-Server-Version {{ project_repo_version }};

        # HSTS (2 years)
        add_header Strict-Transport-Security "max-age=63072000" always;

        uwsgi_pass  {{ server_name_no_dots }}_app;
        uwsgi_read_timeout 300s;
        include  /etc/nginx/uwsgi_params;
    }
}
